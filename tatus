[33mcommit ae203fbf9633f2061c1a04ba30aacd60fe0ac2ea[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: Tony Dennis (4Sight Education Ltd) <admin@vespa.academy>
Date:   Fri Mar 14 13:27:43 2025 +0000

    Fix Knack API integration for topic list saving and loading

[1mdiff --git a/src/components/AICardGenerator.jsx b/src/components/AICardGenerator.jsx[m
[1mindex 30d345e..4a63a29 100644[m
[1m--- a/src/components/AICardGenerator.jsx[m
[1m+++ b/src/components/AICardGenerator.jsx[m
[36m@@ -51,8 +51,9 @@[m [mconst BRIGHT_COLORS = [[m
 [m
 // API keys - in production, these should be in server environment variables[m
 const API_KEY = process.env.REACT_APP_OPENAI_KEY || "your-openai-key";[m
[31m-const KNACK_APP_ID = "64fc50bc3cd0ac00254bb62b"; // Using a direct value to avoid malformed App ID errors[m
[31m-const KNACK_API_KEY = process.env.REACT_APP_KNACK_API_KEY || "knack-api-key";[m
[32m+[m[32m// Use environment variable for Knack App ID with fallback[m
[32m+[m[32mconst KNACK_APP_ID = process.env.REACT_APP_KNACK_APP_ID || "5ee90912c38ae7001510c1a9"; // Use env variable with fallback to correct ID[m
[32m+[m[32mconst KNACK_API_KEY = process.env.REACT_APP_KNACK_API_KEY || ""; // Don't use a placeholder for API key[m
 [m
 // Helper function to clean OpenAI response[m
 const cleanOpenAIResponse = (response) => {[m
[36m@@ -165,10 +166,24 @@[m [mconst AICardGenerator = ({ onAddCard, onClose, subjects = [], auth, userId }) =>[m
         return [];[m
       }[m
       [m
[32m+[m[32m      // Validate the KNACK_APP_ID and KNACK_API_KEY[m
[32m+[m[32m      if (!KNACK_APP_ID) {[m
[32m+[m[32m        console.error("Missing Knack App ID");[m
[32m+[m[32m        throw new Error("Configuration error: Missing Knack App ID");[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      if (!KNACK_API_KEY) {[m
[32m+[m[32m        console.error("Missing Knack API Key");[m
[32m+[m[32m        throw new Error("Configuration error: Missing Knack API Key. Please check your environment variables.");[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
       console.log("Loading topic lists from Knack for user:", userId);[m
       [m
       // Get topic lists from Knack[m
       const getUrl = `https://api.knack.com/v1/objects/object_102/records/${userId}`;[m
[32m+[m[41m      [m
[32m+[m[32m      console.log("Making Knack API request with App ID:", KNACK_APP_ID);[m
[32m+[m[41m      [m
       const getResponse = await fetch(getUrl, {[m
         method: "GET",[m
         headers: {[m
[36m@@ -179,8 +194,9 @@[m [mconst AICardGenerator = ({ onAddCard, onClose, subjects = [], auth, userId }) =>[m
       });[m
       [m
       if (!getResponse.ok) {[m
[31m-        console.error("Failed to get Knack record:", await getResponse.json());[m
[31m-        return [];[m
[32m+[m[32m        const errorText = await getResponse.text();[m
[32m+[m[32m        console.error("Knack API error response:", errorText);[m
[32m+[m[32m        throw new Error(`Knack API returned ${getResponse.status}: ${errorText}`);[m
       }[m
       [m
       const userData = await getResponse.json();[m
[36m@@ -352,8 +368,70 @@[m [mconst AICardGenerator = ({ onAddCard, onClose, subjects = [], auth, userId }) =>[m
     }[m
   };[m
 [m
[32m+[m[32m  // Save topic list to Knack - updated to save the entire lists array[m
[32m+[m[32m  const saveTopicListToKnack = async (topicLists) => {[m
[32m+[m[32m    try {[m
[32m+[m[32m      // Check if we're authenticated or have a user ID[m
[32m+[m[32m      if (!auth || !userId) {[m
[32m+[m[32m        console.log("No authentication data or userId, skipping Knack save");[m
[32m+[m[32m        setError("You must be logged in to save topic lists");[m
[32m+[m[32m        return false;[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      console.log("Saving topic lists to Knack for user:", userId);[m
[32m+[m[41m      [m
[32m+[m[32m      // Validate the KNACK_APP_ID and KNACK_API_KEY[m
[32m+[m[32m      if (!KNACK_APP_ID) {[m
[32m+[m[32m        console.error("Missing Knack App ID");[m
[32m+[m[32m        setError("Configuration error: Missing Knack App ID");[m
[32m+[m[32m        return false;[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      if (!KNACK_API_KEY) {[m
[32m+[m[32m        console.error("Missing Knack API Key");[m
[32m+[m[32m        setError("Configuration error: Missing Knack API Key. Please check your environment variables.");[m
[32m+[m[32m        return false;[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      // Safety check to ensure topicLists is a valid array[m
[32m+[m[32m      if (!Array.isArray(topicLists)) {[m
[32m+[m[32m        console.error("Topic lists is not an array:", topicLists);[m
[32m+[m[32m        setError("Invalid data format: Topic lists must be an array");[m
[32m+[m[32m        return false;[m
[32m+[m[32m      }[m
[32m+[m[41m      [m
[32m+[m[32m      // Update Knack record directly with the full lists array[m
[32m+[m[32m      const updateUrl = `https://api.knack.com/v1/objects/object_102/records/${userId}`;[m
[32m+[m[32m      const updateResponse = await fetch(updateUrl, {[m
[32m+[m[32m        method: "PUT",[m
[32m+[m[32m        headers: {[m
[32m+[m[32m          "Content-Type": "application/json",[m
[32m+[m[32m          "X-Knack-Application-ID": KNACK_APP_ID,[m
[32m+[m[32m          "X-Knack-REST-API-Key": KNACK_API_KEY[m
[32m+[m[32m        },[m
[32m+[m[32m        body: JSON.stringify({[m
[32m+[m[32m          field_3011: JSON.stringify(topicLists)[m
[32m+[m[32m        })[m
[32m+[m[32m      });[m
[32m+[m[41m      [m
[32m+[m[32m      if (updateResponse.ok) {[m
[32m+[m[32m        console.log("Topic lists saved to Knack successfully:", topicLists.length, "lists");[m
[32m+[m[32m        return true;[m
[32m+[m[32m      } else {[m
[32m+[m[32m        const errorData = await updateResponse.json().catch(e => ({ message: "Unknown error" }));[m
[32m+[m[32m        console.error("Failed to save topic lists to Knack:", errorData);[m
[32m+[m[32m        setError(`Failed to save topic lists: ${errorData.message || "API error"}`);[m
[32m+[m[32m        return false;[m
[32m+[m[32m      }[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m      console.error("Error saving topic lists to Knack:", error);[m
[32m+[m[32m      setError(`Error saving topic lists: ${error.message || "Unknown error"}`);[m
[32m+[m[32m      return false;[m
[32m+[m[32m    }[m
[32m+[m[32m  };[m
[32m+[m
   // Save the current topic list[m
[31m-  const saveTopicList = () => {[m
[32m+[m[32m  const saveTopicList = async () => {[m
     if (!topicListName.trim()) {[m
       setError("Please enter a name for your topic list");[m
       return;[m
[36m@@ -378,18 +456,21 @@[m [mconst AICardGenerator = ({ onAddCard, onClose, subjects = [], auth, userId }) =>[m
       };[m
       [m
       const updatedLists = [...savedTopicLists, newSavedList];[m
[31m-      setSavedTopicLists(updatedLists);[m
       [m
[31m-      // Save directly to Knack[m
[31m-      saveTopicListToKnack(updatedLists);[m
[32m+[m[32m      // Save directly to Knack and only update state if successful[m
[32m+[m[32m      const saveSuccess = await saveTopicListToKnack(updatedLists);[m
       [m
[31m-      // Close save dialog but keep topic modal open[m
[31m-      setShowSaveTopicDialog(false);[m
[31m-      setTopicListName("");[m
[31m-      setError(null);[m
[31m-      setTopicListSaved(true);[m
[31m-      [m
[31m-      console.log("Topic list saved:", newSavedList);[m
[32m+[m[32m      if (saveSuccess) {[m
[32m+[m[32m        setSavedTopicLists(updatedLists);[m
[32m+[m[41m        [m
[32m+[m[32m        // Close save dialog but keep topic modal open[m
[32m+[m[32m        setShowSaveTopicDialog(false);[m
[32m+[m[32m        setTopicListName("");[m
[32m+[m[32m        setError(null);[m
[32m+[m[32m        setTopicListSaved(true);[m
[32m+[m[41m        [m
[32m+[m[32m        console.log("Topic list saved:", newSavedList);[m
[32m+[m[32m      }[m
     } catch (error) {[m
       console.error("Error saving topic list:", error);[m
       setError("Failed to save topic list: " + error.message);[m
[36m@@ -403,41 +484,6 @@[m [mconst AICardGenerator = ({ onAddCard, onClose, subjects = [], auth, userId }) =>[m
     return `${prefix}_${timestamp}_${randomStr}`;[m
   };[m
   [m
[31m-  // Save topic list to Knack - updated to save the entire lists array[m
[31m-  const saveTopicListToKnack = async (topicLists) => {[m
[31m-    try {[m
[31m-      // Check if we're authenticated or have a user ID[m
[31m-      if (!auth || !userId) {[m
[31m-        console.log("No authentication data or userId, skipping Knack save");[m
[31m-        return;[m
[31m-      }[m
[31m-      [m
[31m-      console.log("Saving topic lists to Knack for user:", userId);[m
[31m-      [m
[31m-      // Update Knack record directly with the full lists array[m
[31m-      const updateUrl = `https://api.knack.com/v1/objects/object_102/records/${userId}`;[m
[31m-      const updateResponse = await fetch(updateUrl, {[m
[31m-        method: "PUT",[m
[31m-        headers: {[m
[31m-          "Content-Type": "application/json",[m
[31m-          "X-Knack-Application-ID": KNACK_APP_ID,[m
[31m-          "X-Knack-REST-API-Key": KNACK_API_KEY[m
[31m-        },[m
[31m-        body: JSON.stringify({[m
[31m-          field_3011: JSON.stringify(topicLists)[m
[31m-        })[m
[31m-      });[m
[31m-      [m
[31m-      if (updateResponse.ok) {[m
[31m-        console.log("Topic lists saved to Knack successfully:", topicLists.length, "lists");[m
[31m-      } else {[m
[31m-        console.error("Failed to save topic lists to Knack:", await updateResponse.json());[m
[31m-      }[m
[31m-    } catch (error) {[m
[31m-      console.error("Error saving topic lists to Knack:", error);[m
[31m-    }[m
[31m-  };[m
[31m-  [m
   // Load a saved topic list[m
   const loadTopicList = (listId) => {[m
     const list = savedTopicLists.find(list => list.id === listId);[m
[36m@@ -467,21 +513,29 @@[m [mconst AICardGenerator = ({ onAddCard, onClose, subjects = [], auth, userId }) =>[m
   };[m
   [m
   // Delete a topic list[m
[31m-  const deleteTopicList = (listId) => {[m
[32m+[m[32m  const deleteTopicList = async (listId) => {[m
     // Check if authenticated[m
     if (!auth || !userId) {[m
       setError("You must be logged in to delete topic lists");[m
       return;[m
     }[m
     [m
[31m-    // Remove from state[m
[31m-    const updatedLists = savedTopicLists.filter(list => list.id !== listId);[m
[31m-    setSavedTopicLists(updatedLists);[m
[31m-    [m
[31m-    // Save the updated lists to Knack[m
[31m-    saveTopicListToKnack(updatedLists);[m
[31m-    [m
[31m-    console.log(`Deleted topic list with ID: ${listId}`);[m
[32m+[m[32m    try {[m
[32m+[m[32m      // Remove from state first[m
[32m+[m[32m      const updatedLists = savedTopicLists.filter(list => list.id !== listId);[m
[32m+[m[41m      [m
[32m+[m[32m      // Save the updated lists to Knack[m
[32m+[m[32m      const saveSuccess = await saveTopicListToKnack(updatedLists);[m
[32m+[m[41m      [m
[32m+[m[32m      if (saveSuccess) {[m
[32m+[m[32m        // Only update state if the API call was successful[m
[32m+[m[32m        setSavedTopicLists(updatedLists);[m
[32m+[m[32m        console.log(`Deleted topic list with ID: ${listId}`);[m
[32m+[m[32m      }[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m      console.error(`Error deleting topic list ${listId}:`, error);[m
[32m+[m[32m      setError(`Failed to delete topic list: ${error.message}`);[m
[32m+[m[32m    }[m
   };[m
   [m
   // Render saved topic lists[m
[36m@@ -961,6 +1015,14 @@[m [mUse this format for different question types:[m
 [m
   return ([m
     <div className="AICardGenerator">[m
[32m+[m[32m      {/* Add error notification for API configuration issues */}[m
[32m+[m[32m      {error && error.includes("Configuration error") && ([m
[32m+[m[32m        <div className="api-config-error">[m
[32m+[m[32m          <h3>API Configuration Error</h3>[m
[32m+[m[32m          <p>{error}</p>[m
[32m+[m[32m          <p>Please check your environment variables and make sure the KNACK_API_KEY is properly set.</p>[m
[32m+[m[32m        </div>[m
[32m+[m[32m      )}[m
       {/* Render your component content here */}[m
     </div>[m
   );[m
